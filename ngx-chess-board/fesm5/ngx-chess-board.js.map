{"version":3,"file":"ngx-chess-board.js","sources":["ng://ngx-chess-board/lib/models/pieces/color.ts","ng://ngx-chess-board/lib/models/pieces/piece.ts","ng://ngx-chess-board/lib/models/pieces/point.ts","ng://ngx-chess-board/lib/models/pieces/rook.ts","ng://ngx-chess-board/lib/models/pieces/king.ts","ng://ngx-chess-board/lib/utils/unicode-constants.ts","ng://ngx-chess-board/lib/models/pieces/queen.ts","ng://ngx-chess-board/lib/models/pieces/pawn.ts","ng://ngx-chess-board/lib/models/pieces/knight.ts","ng://ngx-chess-board/lib/models/pieces/bishop.ts","ng://ngx-chess-board/lib/models/board.ts","ng://ngx-chess-board/lib/utils/move-utils.ts","ng://ngx-chess-board/lib/service/ngx-chess-board.service.ts","ng://ngx-chess-board/lib/piece-decorator/piece-abstract-decorator.ts","ng://ngx-chess-board/lib/piece-decorator/available-move-decorator.ts","ng://ngx-chess-board/lib/board-state-provider/board-state-provider.ts","ng://ngx-chess-board/lib/board-state-provider/board-state.ts","ng://ngx-chess-board/lib/history-move-provider/history-move.ts","ng://ngx-chess-board/lib/history-move-provider/history-move-provider.ts","ng://ngx-chess-board/lib/utils/constants.ts","ng://ngx-chess-board/lib/coords/coords-provider.ts","ng://ngx-chess-board/lib/board-state-provider/board-loader.ts","ng://ngx-chess-board/lib/piece-promotion-modal/piece-promotion-modal.component.ts","ng://ngx-chess-board/lib/drawing-tools/arrow.ts","ng://ngx-chess-board/lib/drawing-tools/draw-point.ts","ng://ngx-chess-board/lib/drawing-tools/circle.ts","ng://ngx-chess-board/lib/drawing-tools/draw-provider.ts","ng://ngx-chess-board/lib/ngx-chess-board.component.ts","ng://ngx-chess-board/lib/ngx-chess-board.module.ts","ng://ngx-chess-board/lib/ngx-chess-board-view.ts"],"sourcesContent":["export enum Color{\r\n    WHITE,\r\n    BLACK\r\n}","import {Point} from './point';\r\nimport {Color} from './color';\r\nimport {AbstractPiece} from '../../piece-decorator/abstract-piece';\r\nimport {Board} from '../board';\r\n\r\nexport abstract class Piece implements AbstractPiece {\r\n  point: Point;\r\n  color: Color;\r\n  image: string;\r\n  checkPoints: Point[] = [];\r\n  relValue: number;\r\n  board: Board;\r\n\r\n  constructor(point: Point, color: Color, image: string, relValue: number, board: Board) {\r\n    this.color = color;\r\n    this.image = image;\r\n    this.point = point;\r\n    this.relValue = relValue;\r\n    this.board = board;\r\n  }\r\n\r\n  abstract getPossibleMoves(): Point[];\r\n\r\n  abstract getPossibleCaptures(): Point[];\r\n\r\n  abstract getCoveredFields(): Point[]; // zwraca liste punktow ktore sa puste lub istnieje na nich pionek tego samego koloru\r\n\r\n}\r\n","export class Point {\r\n  row: number;\r\n  col: number;\r\n\r\n  constructor(row: number, col: number) {\r\n    this.row = row;\r\n    this.col = col;\r\n  }\r\n\r\n  isEqual(that: Point) {\r\n    return that && this.row === that.row && this.col === that.col;\r\n  }\r\n\r\n  hasCoordsEqual(row: number, col: number) {\r\n    return row && col && this.row === row && this.col === col;\r\n  }\r\n}\r\n\r\n","import { Piece } from './piece';\r\nimport { Color } from './color';\r\nimport { Point } from './point';\r\nimport { King } from './king';\r\nimport {Board} from '../board';\r\n\r\nexport class Rook extends Piece {\r\n\r\n  isMovedAlready = false;\r\n\r\n  constructor(point: Point, color: Color, image: string, board: Board) {\r\n        super(point, color, image, 5, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        let possiblePoints = [];\r\n\r\n        let row = this.point.row;\r\n        let col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) { // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) { // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) { // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) { // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        let possiblePoints = [];\r\n\r\n        let row = this.point.row;\r\n        let col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) { // dol\r\n            if (this.board.isFieldTakenByEnemy(i, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) { // gora\r\n            if (this.board.isFieldTakenByEnemy(i, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) { // lewo\r\n            if (this.board.isFieldTakenByEnemy(row, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(row,j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row,j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) { // prawo\r\n            if (this.board.isFieldTakenByEnemy(row, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n\r\n    getCoveredFields(): Point[] {\r\n        let possiblePoints = [];\r\n\r\n        let row = this.point.row;\r\n        let col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) { // dol\r\n            if (this.board.isFieldEmpty(i, col)){\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) { // gora\r\n            if (this.board.isFieldEmpty(i, col)){\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) { // lewo\r\n            if (this.board.isFieldEmpty(row, j)){\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) { // prawo\r\n            if (this.board.isFieldEmpty(row, j)){\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n}\r\n","import {Piece} from './piece';\r\nimport {Color} from './color';\r\nimport {Point} from './point';\r\nimport {Rook} from \"./rook\";\r\nimport {Board} from '../board';\r\n\r\nexport class King extends Piece {\r\n\r\n  castledAlready = false;\r\n  shortCastled = false;\r\n  longCastled = false;\r\n  isMovedAlready;\r\n  isCastling = false;\r\n\r\n  constructor(point: Point, color: Color, image: string, board: Board) {\r\n    super(point, color, image, 0, board);\r\n  }\r\n\r\n  getPossibleMoves(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n    // lewo\r\n    if (this.board.isFieldEmpty(row, col - 1) && !this.board.isFieldUnderAttack(row, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row, col - 1));\r\n    }\r\n\r\n    // prawo\r\n    if (this.board.isFieldEmpty(row, col + 1) && !this.board.isFieldUnderAttack(row, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row, col + 1));\r\n    }\r\n\r\n    // dol\r\n    if (this.board.isFieldEmpty(row + 1, col) && !this.board.isFieldUnderAttack(row + 1, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col));\r\n    }\r\n\r\n    // gora\r\n    if (this.board.isFieldEmpty(row - 1, col) && !this.board.isFieldUnderAttack(row - 1, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col));\r\n    }\r\n\r\n    // lewo gora\r\n    if (this.board.isFieldEmpty(row - 1, col - 1) && !this.board.isFieldUnderAttack(row - 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col - 1));\r\n    }\r\n    // prawo gora\r\n    if (this.board.isFieldEmpty(row - 1, col + 1) && !this.board.isFieldUnderAttack(row - 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col + 1));\r\n    }\r\n\r\n    // lewo dol\r\n    if (this.board.isFieldEmpty(row + 1, col - 1) && !this.board.isFieldUnderAttack(row + 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col - 1));\r\n    }\r\n    // prawo dol\r\n    if (this.board.isFieldEmpty(row + 1, col + 1) && !this.board.isFieldUnderAttack(row + 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col + 1));\r\n    }\r\n\r\n    if(!this.isMovedAlready){\r\n      let longCastlePossible = true;\r\n      for (let i = col - 1; i > 0; --i) {\r\n        if (!this.board.isFieldEmpty(row, i) || this.board.isFieldUnderAttack(row, i, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n          longCastlePossible = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (longCastlePossible && this.board.getPieceByField(row, 0)) {\r\n        let leftRook = this.board.getPieceByField(row, 0);\r\n        if (leftRook instanceof Rook) {\r\n          if (!leftRook.isMovedAlready) {\r\n            possiblePoints.push(new Point(row, col - 2));\r\n          }\r\n        }\r\n      }\r\n\r\n      let shortCastlePossible = true;\r\n      for (let i = col + 1; i < 7; ++i) {\r\n        if (!this.board.isFieldEmpty(row, i) || this.board.isFieldUnderAttack(row, i, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n          shortCastlePossible = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (shortCastlePossible && this.board.getPieceByField(row, 7)) {\r\n        let rightRook = this.board.getPieceByField(row, 7);\r\n        if (rightRook instanceof Rook) {\r\n          if (!rightRook.isMovedAlready) {\r\n            possiblePoints.push(new Point(row, col + 2));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n  getPossibleCaptures(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    // lewo\r\n    if (this.board.isFieldTakenByEnemy(row, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row, col - 1));\r\n    }\r\n\r\n    // prawo\r\n    if (this.board.isFieldTakenByEnemy(row, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row, col + 1));\r\n    }\r\n\r\n    // dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row + 1, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col));\r\n    }\r\n\r\n    // gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row - 1, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col));\r\n    }\r\n\r\n    // lewo gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row - 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col - 1));\r\n    }\r\n    // prawo gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row - 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col + 1));\r\n    }\r\n\r\n    // lewo dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row + 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col - 1));\r\n    }\r\n    // prawo dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE) && !this.board.isFieldUnderAttack(row + 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col + 1));\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n  getCoveredFields(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    // lewo\r\n    if (this.board.isFieldTakenByEnemy(row, col - 1, this.color)) {\r\n      possiblePoints.push(new Point(row, col - 1));\r\n    }\r\n\r\n    // prawo\r\n    if (this.board.isFieldTakenByEnemy(row, col + 1, this.color)) {\r\n      possiblePoints.push(new Point(row, col + 1));\r\n    }\r\n\r\n    // dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col, this.color)) {\r\n      possiblePoints.push(new Point(row + 1, col));\r\n    }\r\n\r\n    // gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col, this.color)) {\r\n      possiblePoints.push(new Point(row - 1, col));\r\n    }\r\n\r\n    // lewo gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col - 1, this.color)) {\r\n      possiblePoints.push(new Point(row - 1, col - 1));\r\n    }\r\n    // prawo gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col + 1, this.color)) {\r\n      possiblePoints.push(new Point(row - 1, col + 1));\r\n    }\r\n\r\n    // lewo dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col - 1, this.color)) {\r\n      possiblePoints.push(new Point(row + 1, col - 1));\r\n    }\r\n    // prawo dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col + 1, this.color)) {\r\n      possiblePoints.push(new Point(row + 1, col + 1));\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n}\r\n","export class UnicodeConstants {\r\n\r\n  static WHITE_KING = '&#x2654;';\r\n  static WHITE_QUEEN = '&#x2655;';\r\n  static WHITE_KNIGHT = '&#x2658;';\r\n  static WHITE_ROOK = '&#x2656;';\r\n  static WHITE_PAWN = '&#x2659;';\r\n  static WHITE_BISHOP = '&#x2657;';\r\n\r\n  static BLACK_KING = '&#x265A;';\r\n  static BLACK_QUEEN = '&#x265B;';\r\n  static BLACK_KNIGHT = '&#x265E;';\r\n  static BLACK_ROOK = '&#x265C;';\r\n  static BLACK_PAWN = '&#x265F;';\r\n  static BLACK_BISHOP = '&#x265D;';\r\n\r\n}\r\n","import {Piece} from './piece';\r\nimport {Point} from './point';\r\nimport {Color} from './color';\r\nimport {King} from './king';\r\nimport {Board} from '../board';\r\n\r\nexport class Queen extends Piece {\r\n\r\n  constructor(point: Point, color: Color, image: string, board: Board) {\r\n    super(point, color, image, 9, board);\r\n  }\r\n\r\n  getPossibleMoves(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) { // lewa gorna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) { // prawa gorna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) { // lewa dolna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) { // prawa dolna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = row + 1; i < 8; ++i) { // dol\r\n      if (this.board.isFieldEmpty(i, col)) {\r\n        possiblePoints.push(new Point(i, col));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = row - 1; i >= 0; --i) { // gora\r\n      if (this.board.isFieldEmpty(i, col)) {\r\n        possiblePoints.push(new Point(i, col));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let j = col - 1; j >= 0; --j) { // lewo\r\n      if (this.board.isFieldEmpty(row, j)) {\r\n        possiblePoints.push(new Point(row, j));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let j = col + 1; j < 8; ++j) { // prawo\r\n      if (this.board.isFieldEmpty(row, j)) {\r\n        possiblePoints.push(new Point(row, j));\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n  getPossibleCaptures(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) { // lewa gorna przekatna\r\n      if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(i, j));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(i, j)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) { // prawa gorna przekatna\r\n      if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(i, j));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(i, j)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) { // lewa dolna przekatna\r\n      if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(i, j));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(i, j)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) { // prawa dolna przekatna\r\n      if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(i, j));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(i, j)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (let i = row + 1; i < 8; ++i) { // dol\r\n      if (this.board.isFieldTakenByEnemy(i, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(i, col));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(i, col)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row - 1; i >= 0; --i) { // gora\r\n      if (this.board.isFieldTakenByEnemy(i, col, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(i, col));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(i, col)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let j = col - 1; j >= 0; --j) { // lewo\r\n      if (this.board.isFieldTakenByEnemy(row, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(row, j));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(row, j)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let j = col + 1; j < 8; ++j) { // prawo\r\n      if (this.board.isFieldTakenByEnemy(row, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(row, j));\r\n        break;\r\n      } else {\r\n        if (!this.board.isFieldEmpty(row, j)) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return possiblePoints;\r\n  }\r\n\r\n  getCoveredFields(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    for (let i = row + 1; i < 8; ++i) { // dol\r\n      if (this.board.isFieldEmpty(i, col)) {\r\n        possiblePoints.push(new Point(i, col));\r\n      } else {\r\n        if (!(this.board.getPieceByField(i, col) instanceof King)) {\r\n          possiblePoints.push(new Point(i, col));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row - 1; i >= 0; --i) { // gora\r\n      if (this.board.isFieldEmpty(i, col)) {\r\n        possiblePoints.push(new Point(i, col));\r\n      } else {\r\n        if (!(this.board.getPieceByField(i, col) instanceof King)) {\r\n          possiblePoints.push(new Point(i, col));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let j = col - 1; j >= 0; --j) { // lewo\r\n      if (this.board.isFieldEmpty(row, j)) {\r\n        possiblePoints.push(new Point(row, j));\r\n      } else {\r\n        if (!(this.board.getPieceByField(row, j) instanceof King)) {\r\n          possiblePoints.push(new Point(row, j));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let j = col + 1; j < 8; ++j) { // prawo\r\n      if (this.board.isFieldEmpty(row, j)) {\r\n        possiblePoints.push(new Point(row, j));\r\n      } else {\r\n        if (!(this.board.getPieceByField(row, j) instanceof King)) {\r\n          possiblePoints.push(new Point(row, j));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) { // lewa gorna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n          possiblePoints.push(new Point(i, j));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) { // prawa gorna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n          possiblePoints.push(new Point(i, j));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) { // lewa dolna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n          possiblePoints.push(new Point(i, j));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) { // prawa dolna przekatna\r\n      if (this.board.isFieldEmpty(i, j)) {\r\n        possiblePoints.push(new Point(i, j));\r\n      } else {\r\n        if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n          possiblePoints.push(new Point(i, j));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n}\r\n","import {Piece} from './piece';\r\nimport {Color} from './color';\r\nimport {Point} from './point';\r\nimport {Board} from '../board';\r\n\r\nexport class Pawn extends Piece {\r\n\r\n  isMovedAlready = false;\r\n\r\n  constructor(point: Point, color: Color, image: string, board: Board) {\r\n    super(point, color, image, 1, board);\r\n  }\r\n\r\n  getPossibleMoves(): Point[] {\r\n    let possiblePoints = [];\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n    if ((!this.board.reverted && this.color === Color.WHITE) || (this.board.reverted && this.color === Color.BLACK)) {\r\n      if (this.board.isFieldEmpty(row - 1, col)) {\r\n        possiblePoints.push(new Point(row - 1, col));\r\n\r\n        if (!this.isMovedAlready && this.board.isFieldEmpty(row - 2, col)) {\r\n          possiblePoints.push(new Point(row - 2, col));\r\n        }\r\n      }\r\n    } else {\r\n      if (/*!board.isFieldTakenByEnemy(row + 1, col, Color.WHITE) &&*/ this.board.isFieldEmpty(row + 1, col)) {\r\n        possiblePoints.push(new Point(row + 1, col));\r\n\r\n        if (!this.isMovedAlready && this.board.isFieldEmpty(row + 2, col)) {\r\n          possiblePoints.push(new Point(row + 2, col));\r\n        }\r\n      }\r\n    }\r\n    return possiblePoints;\r\n  }\r\n\r\n  getPossibleCaptures(): Point[] {\r\n    let possiblePoints = [];\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    if ((!this.board.reverted && this.color === Color.WHITE) || (this.board.reverted && this.color === Color.BLACK)) {\r\n      if (this.board.isFieldTakenByEnemy(row - 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(row - 1, col - 1));\r\n      }\r\n      if (this.board.isFieldTakenByEnemy(row - 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(row - 1, col + 1));\r\n      }\r\n    } else {\r\n      if (this.board.isFieldTakenByEnemy(row + 1, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(row + 1, col - 1));\r\n      }\r\n      if (this.board.isFieldTakenByEnemy(row + 1, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n        possiblePoints.push(new Point(row + 1, col + 1));\r\n      }\r\n    }\r\n\r\n    if (this.board.enPassantPoint && this.board.enPassantPiece.color === (this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      if (row === this.board.enPassantPiece.point.row && Math.abs(this.board.enPassantPiece.point.col - col) === 1) {\r\n        possiblePoints.push(this.board.enPassantPoint);\r\n      }\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n  getCoveredFields(): Point[] {\r\n    let possiblePoints = [];\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    if ((!this.board.reverted && this.color === Color.WHITE) || (this.board.reverted && this.color === Color.BLACK)) {\r\n\r\n      possiblePoints.push(new Point(row - 1, col - 1));\r\n\r\n      possiblePoints.push(new Point(row - 1, col + 1));\r\n    } else {\r\n      possiblePoints.push(new Point(row + 1, col - 1));\r\n\r\n      possiblePoints.push(new Point(row + 1, col + 1));\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n}\r\n","import {Piece} from './piece';\r\nimport {Point} from './point';\r\nimport {Color} from './color';\r\nimport {Board} from '../board';\r\n\r\nexport class Knight extends Piece {\r\n\r\n  isMovedAlready = false;\r\n\r\n  constructor(point: Point, color: Color, image: string, board: Board) {\r\n    super(point, color, image, 3, board);\r\n  }\r\n\r\n  getPossibleMoves(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    // gora -> lewo\r\n    if (this.board.isFieldEmpty(row - 2, col - 1)) {\r\n      possiblePoints.push(new Point(row - 2, col - 1));\r\n    }\r\n\r\n    // gora -> prawo\r\n    if (this.board.isFieldEmpty(row - 2, col + 1)) {\r\n      possiblePoints.push(new Point(row - 2, col + 1));\r\n    }\r\n\r\n    // lewo -> gora\r\n    if (this.board.isFieldEmpty(row - 1, col - 2)) {\r\n      possiblePoints.push(new Point(row - 1, col - 2));\r\n    }\r\n\r\n    // prawo -> gora\r\n    if (this.board.isFieldEmpty(row - 1, col + 2)) {\r\n      possiblePoints.push(new Point(row - 1, col + 2));\r\n    }\r\n\r\n    // lewo -> dol\r\n    if (this.board.isFieldEmpty(row + 1, col - 2)) {\r\n      possiblePoints.push(new Point(row + 1, col - 2));\r\n    }\r\n\r\n    // prawo -> dol\r\n    if (this.board.isFieldEmpty(row + 1, col + 2)) {\r\n      possiblePoints.push(new Point(row + 1, col + 2));\r\n    }\r\n\r\n    // dol -> lewo\r\n    if (this.board.isFieldEmpty(row + 2, col - 1)) {\r\n      possiblePoints.push(new Point(row + 2, col - 1));\r\n    }\r\n\r\n    // dol -> prawo\r\n    if (this.board.isFieldEmpty(row + 2, col + 1)) {\r\n      possiblePoints.push(new Point(row + 2, col + 1));\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n  getPossibleCaptures(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    // gora -> lewo\r\n    if (this.board.isFieldTakenByEnemy(row - 2, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 2, col - 1));\r\n    }\r\n\r\n    // gora -> prawo\r\n    if (this.board.isFieldTakenByEnemy(row - 2, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 2, col + 1));\r\n    }\r\n\r\n    // lewo -> gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col - 2, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col - 2));\r\n    }\r\n\r\n    // prawo -> gora\r\n    if (this.board.isFieldTakenByEnemy(row - 1, col + 2, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row - 1, col + 2));\r\n    }\r\n\r\n    // lewo -> dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col - 2, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col - 2));\r\n    }\r\n\r\n    // prawo -> dol\r\n    if (this.board.isFieldTakenByEnemy(row + 1, col + 2, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 1, col + 2));\r\n    }\r\n\r\n    // dol -> lewo\r\n    if (this.board.isFieldTakenByEnemy(row + 2, col - 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 2, col - 1));\r\n    }\r\n\r\n    // dol -> prawo\r\n    if (this.board.isFieldTakenByEnemy(row + 2, col + 1, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n      possiblePoints.push(new Point(row + 2, col + 1));\r\n    }\r\n\r\n    return possiblePoints;\r\n  }\r\n\r\n  getCoveredFields(): Point[] {\r\n    let possiblePoints = [];\r\n\r\n    let row = this.point.row;\r\n    let col = this.point.col;\r\n\r\n    // gora -> lewo\r\n    possiblePoints.push(new Point(row - 2, col - 1));\r\n\r\n\r\n    // gora -> prawo\r\n    possiblePoints.push(new Point(row - 2, col + 1));\r\n\r\n    // lewo -> gora\r\n    possiblePoints.push(new Point(row - 1, col - 2));\r\n\r\n    // prawo -> gora\r\n    possiblePoints.push(new Point(row - 1, col + 2));\r\n\r\n    // lewo -> dol\r\n    possiblePoints.push(new Point(row + 1, col - 2));\r\n\r\n    // prawo -> dol\r\n    possiblePoints.push(new Point(row + 1, col + 2));\r\n\r\n    // dol -> lewo\r\n    possiblePoints.push(new Point(row + 2, col - 1));\r\n\r\n\r\n    // dol -> prawo\r\n    possiblePoints.push(new Point(row + 2, col + 1));\r\n\r\n\r\n    return possiblePoints;\r\n  }\r\n}\r\n","import { Piece } from './piece';\r\nimport { Color } from './color';\r\nimport { Point } from './point';\r\nimport { King } from './king';\r\nimport {Board} from '../board';\r\n\r\nexport class Bishop extends Piece {\r\n\r\n  constructor(point: Point, color: Color, image: string, board: Board) {\r\n        super(point, color, image, 3, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        let possiblePoints = [];\r\n\r\n        let row = this.point.row;\r\n        let col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) { // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } //else if (board.getPieceByField(i, j) instanceof King && (board.getPieceByField(i, j).color !== this.color)){\r\n               // for( let a = row - 1, b = col - 1; a > i && j >= col; --a, --b){\r\n                 //   possiblePoints.push(new Point(i, j));\r\n             //   }\r\n           // }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) { // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) { // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) { // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures() {\r\n        let possiblePoints = [];\r\n\r\n        let row = this.point.row;\r\n        let col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) { // lewa gorna przekatna\r\n            if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) { // prawa gorna przekatna\r\n            if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) { // lewa dolna przekatna\r\n            if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) { // prawa dolna przekatna\r\n            if (this.board.isFieldTakenByEnemy(i, j, this.color === Color.WHITE ? Color.BLACK : Color.WHITE)) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        let possiblePoints = [];\r\n\r\n        let row = this.point.row;\r\n        let col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) { // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j))\r\n                possiblePoints.push(new Point(i, j));\r\n            else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) { // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j))\r\n                possiblePoints.push(new Point(i, j));\r\n            else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) { // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j))\r\n                possiblePoints.push(new Point(i, j));\r\n            else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) { // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j))\r\n                possiblePoints.push(new Point(i, j));\r\n            else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n}\r\n","import {Point} from './pieces/point';\r\nimport {Color} from './pieces/color';\r\nimport {King} from './pieces/king';\r\nimport {Piece} from './pieces/piece';\r\nimport {cloneDeep} from 'lodash';\r\nimport {Rook} from './pieces/rook';\r\nimport {Knight} from './pieces/knight';\r\nimport {Bishop} from './pieces/bishop';\r\nimport {Queen} from './pieces/queen';\r\nimport {Pawn} from './pieces/pawn';\r\n\r\nexport class Board {\r\n\r\n  board: number[][];\r\n  pieces: Piece[] = [];\r\n\r\n  enPassantPoint: Point = null;\r\n  enPassantPiece: Piece = null;\r\n  lastMoveSrc: Point = null;\r\n  lastMoveDest: Point = null;\r\n  activePiece: Piece;\r\n\r\n  blackKingChecked: boolean;\r\n  possibleCaptures: any[] = [];\r\n  possibleMoves: Point[] = [];\r\n  whiteKingChecked: boolean;\r\n\r\n  currentWhitePlayer = true;\r\n  reverted: boolean = false;\r\n  fullMoveCount: number = 1;\r\n  fen: string;\r\n\r\n  constructor() {\r\n\r\n    this.board = [];\r\n    for (var i: number = 0; i < 8; ++i) {\r\n      this.board[i] = [];\r\n      for (var j: number = 0; j < 8; ++j) {\r\n        this.board[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  isXYInPossibleMoves(row: number, col: number): boolean {\r\n    return this.possibleMoves.some(e => e.row === row && e.col === col);\r\n  }\r\n\r\n  isXYInPossibleCaptures(row: number, col: number): boolean {\r\n    return this.possibleCaptures.some(e => e.row === row && e.col === col);\r\n  }\r\n\r\n  isXYInSourceMove(i: number, j: number) {\r\n    return this.lastMoveSrc && this.lastMoveSrc.row === i && this.lastMoveSrc.col === j;\r\n  }\r\n\r\n  isXYInDestMove(i: number, j: number) {\r\n    return this.lastMoveDest && this.lastMoveDest.row === i && this.lastMoveDest.col === j;\r\n  }\r\n\r\n  isXYInActiveMove(i: number, j: number) {\r\n    return this.activePiece && this.activePiece.point.row === i && this.activePiece.point.col === j;\r\n  }\r\n\r\n  isPointInPossibleMoves(point: Point): boolean {\r\n    return this.possibleMoves.some(e => e.row === point.row && e.col === point.col);\r\n  }\r\n\r\n  isPointInPossibleCaptures(point: Point): boolean {\r\n    return this.possibleCaptures.some(e => e.row === point.row && e.col === point.col);\r\n  }\r\n\r\n  reset() {\r\n    this.lastMoveDest = null;\r\n    this.lastMoveSrc = null;\r\n    this.whiteKingChecked = false;\r\n    this.blackKingChecked = false;\r\n    this.possibleCaptures = [];\r\n    this.possibleMoves = [];\r\n    this.activePiece = null;\r\n    this.reverted = false;\r\n    this.currentWhitePlayer = true;\r\n    this.enPassantPoint = null;\r\n    this.enPassantPiece = null;\r\n    this.fullMoveCount = 1;\r\n    this.calculateFEN();\r\n  }\r\n\r\n  reverse() {\r\n    this.reverted = !this.reverted;\r\n    this.activePiece = null;\r\n    this.possibleMoves = [];\r\n    this.possibleCaptures = [];\r\n    for (let i = 0; i < this.pieces.length; ++i) {\r\n      this.reversePoint(this.pieces[i].point);\r\n    }\r\n\r\n    this.reversePoint(this.lastMoveSrc);\r\n\r\n    if (this.enPassantPoint && this.enPassantPiece) {\r\n      this.reversePoint(this.enPassantPoint);\r\n    }\r\n  }\r\n\r\n  private reversePoint(point: Point) {\r\n    if (point) {\r\n      point.row = Math.abs(point.row - 7);\r\n      point.col = Math.abs(point.col - 7);\r\n    }\r\n  }\r\n\r\n  clone(): Board {\r\n    return cloneDeep(this);\r\n  }\r\n\r\n  isFieldTakenByEnemy(row: number, col: number, enemyColor: Color): boolean {\r\n    if (row > 7 || row < 0 || col > 7 || col < 0) {\r\n      return false;\r\n    }\r\n    return this.pieces.some(e => e.point.col === col && e.point.row === row && e.color === enemyColor);\r\n  }\r\n\r\n  isFieldEmpty(row: number, col: number): boolean {\r\n    if (row > 7 || row < 0 || col > 7 || col < 0) {\r\n      return false;\r\n    }\r\n    return !this.pieces.some(e => e.point.col === col && e.point.row === row);\r\n  }\r\n\r\n  isFieldUnderAttack(row: number, col: number, color: Color) {\r\n    let found = false;\r\n    return this.pieces.filter(e => e.color === color).some(e => e.getCoveredFields().some(f => f.col === col && f.row === row));\r\n  }\r\n\r\n  getPieceByField(row: number, col: number): Piece {\r\n    if (this.isFieldEmpty(row, col)) {\r\n      //   throw new Error('Piece not found');\r\n      return undefined;\r\n    }\r\n\r\n    return this.pieces.find(e => e.point.col === col && e.point.row === row);\r\n  }\r\n\r\n  isKingInCheck(color: Color, piece: Piece[]): boolean {\r\n    let king = piece\r\n      .find(e => e.color === color && e instanceof King);\r\n\r\n    if (king) {\r\n      return piece.some(e => e.getPossibleCaptures().some(e => e.col === king.point.col && e.row === king.point.row) && e.color !== color);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getKingByColor(color: Color): King {\r\n    return <King> this.pieces.find(e => (e instanceof King) && e.color === color);\r\n  }\r\n\r\n  getCastleFENString(color: Color) {\r\n    let king = this.getKingByColor(color);\r\n\r\n    if (king.isMovedAlready) {\r\n      return '';\r\n    }\r\n\r\n    let fen = '';\r\n    let leftRook = this.getPieceByField(king.point.row, 0);\r\n    let rightRook = this.getPieceByField(king.point.row, 7);\r\n\r\n    if (rightRook instanceof Rook && rightRook.color === color) {\r\n      if (!rightRook.isMovedAlready) {\r\n        fen += this.reverted ? 'q' : 'k';\r\n      }\r\n    }\r\n\r\n    if (leftRook instanceof Rook && leftRook.color === color) {\r\n      if (!leftRook.isMovedAlready) {\r\n        fen += this.reverted ? 'k' : 'q';\r\n      }\r\n    }\r\n\r\n    fen = fen.split('').sort().join(\"\");\r\n    return color === Color.BLACK ? fen : fen.toUpperCase();\r\n  }\r\n\r\n  getEnPassantFENString() {\r\n    if (this.enPassantPoint) {\r\n      if (this.reverted) {\r\n        return String.fromCharCode(104 - this.enPassantPoint.col) + (this.enPassantPoint.row + 1);\r\n      } else {\r\n        return String.fromCharCode(97 + this.enPassantPoint.col) + (Math.abs(this.enPassantPoint.row - 7) + 1);\r\n      }\r\n    } else {\r\n      return '-';\r\n    }\r\n  }\r\n\r\n\r\n  calculateFEN() {\r\n    let fen = '';\r\n    for (let i = 0; i < 8; ++i) {\r\n      let emptyFields = 0;\r\n      for (let j = 0; j < 8; ++j) {\r\n        let piece = this.pieces.find(e => e.point.col === j && e.point.row === i);\r\n        if (piece) {\r\n          if (emptyFields > 0) {\r\n            fen += emptyFields;\r\n            emptyFields = 0;\r\n          }\r\n\r\n          if (piece instanceof Rook) {\r\n            fen += piece.color === Color.BLACK ? 'r' : 'R';\r\n          } else if (piece instanceof Knight) {\r\n            fen += piece.color === Color.BLACK ? 'n' : 'N';\r\n          } else if (piece instanceof Bishop) {\r\n            fen += piece.color === Color.BLACK ? 'b' : 'B';\r\n          } else if (piece instanceof Queen) {\r\n            fen += piece.color === Color.BLACK ? 'q' : 'Q';\r\n          } else if (piece instanceof King) {\r\n            fen += piece.color === Color.BLACK ? 'k' : 'K';\r\n          } else if (piece instanceof Pawn) {\r\n            fen += piece.color === Color.BLACK ? 'p' : 'P';\r\n          }\r\n        } else {\r\n          ++emptyFields;\r\n        }\r\n      }\r\n\r\n      if (emptyFields > 0) {\r\n        fen += emptyFields;\r\n      }\r\n\r\n      fen += '/';\r\n    }\r\n\r\n    fen = fen.substr(0, fen.length - 1);\r\n\r\n    if (this.reverted) {\r\n      fen = fen.split('').reverse().join('');\r\n    }\r\n\r\n    fen += (' ' + (this.currentWhitePlayer ? 'w' : 'b'));\r\n    let whiteEnPassant = this.getCastleFENString(Color.WHITE);\r\n    let blackEnPassant = this.getCastleFENString(Color.BLACK);\r\n    let concatedEnPassant = whiteEnPassant + blackEnPassant;\r\n    if (!concatedEnPassant) {\r\n      concatedEnPassant = '-';\r\n    }\r\n\r\n    fen += (' ' + concatedEnPassant);\r\n    fen += (' ' + (this.getEnPassantFENString()));\r\n    fen += ' ' + 0;\r\n    fen += ' ' + this.fullMoveCount;\r\n    this.fen = fen;\r\n  }\r\n\r\n  isXYInPointSelection(i: number, j: number) {\r\n    return false;\r\n  }\r\n}\r\n","import {Color} from '../models/pieces/color';\r\nimport {Board} from '../models/board';\r\nimport {Point} from '../models/pieces/point';\r\n\r\nexport class MoveUtils {\r\n\r\n  public static willMoveCauseCheck(currentColor: Color, row: number, col: number, destRow: number, destCol: number, board: Board) {\r\n    let srcPiece = board.getPieceByField(row, col);\r\n    let destPiece = board.getPieceByField(destRow, destCol);\r\n\r\n    if (srcPiece) {\r\n      srcPiece.point.row = destRow;\r\n      srcPiece.point.col = destCol;\r\n    }\r\n\r\n    if (destPiece) {\r\n      board.pieces = board.pieces.filter(e => e !== destPiece);\r\n    }\r\n    let isBound = board.isKingInCheck(currentColor, board.pieces);\r\n\r\n    if (srcPiece) {\r\n      srcPiece.point.col = col;\r\n      srcPiece.point.row = row;\r\n    }\r\n\r\n    if (destPiece) {\r\n      board.pieces.push(destPiece);\r\n    }\r\n\r\n    return isBound;\r\n  }\r\n\r\n  public static format(sourcePoint: Point, destPoint: Point, reverted: boolean) {\r\n    if (reverted) {\r\n      let sourceX = 104 - sourcePoint.col;\r\n      let destX = 104 - destPoint.col;\r\n      return String.fromCharCode(sourceX) + (sourcePoint.row + 1)\r\n        + String.fromCharCode(destX) + (destPoint.row + 1);\r\n    } else {\r\n      let incrementX = 97;\r\n      return String.fromCharCode(sourcePoint.col + incrementX) + (Math.abs(sourcePoint.row - 7) + 1)\r\n        + String.fromCharCode(destPoint.col + incrementX) + (Math.abs(destPoint.row - 7) + 1);\r\n    }\r\n  }\r\n\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxChessBoardService {\r\n\r\n  private componentMethodCallSource = new Subject<any>();\r\n\r\n  componentMethodCalled$ = this.componentMethodCallSource.asObservable();\r\n\r\n  reset() {\r\n    this.componentMethodCallSource.next();\r\n  }\r\n\r\n}\r\n","import {AbstractPiece} from './abstract-piece';\r\nimport {Point} from '../models/pieces/point';\r\n\r\nexport abstract class PieceAbstractDecorator implements AbstractPiece{\r\n\r\n  piece: AbstractPiece;\r\n\r\n  protected constructor(piece: AbstractPiece) {\r\n    this.piece = piece;\r\n  }\r\n\r\n  abstract getPossibleCaptures(): Point[];\r\n\r\n  abstract getPossibleMoves(): Point[];\r\n\r\n}\r\n","import {PieceAbstractDecorator} from './piece-abstract-decorator';\r\nimport {Point} from '../models/pieces/point';\r\nimport {AbstractPiece} from './abstract-piece';\r\nimport {MoveUtils} from '../utils/move-utils';\r\nimport {Color} from '../models/pieces/color';\r\nimport {NgxChessBoardComponent} from '../ngx-chess-board.component';\r\nimport {Board} from '../models/board';\r\n\r\nexport class AvailableMoveDecorator extends PieceAbstractDecorator {\r\n\r\n  private pointClicked: Point;\r\n  private color: Color;\r\n  private board: Board;\r\n\r\n  constructor(piece: AbstractPiece, pointClicked: Point, color: Color, board: Board) {\r\n    super(piece);\r\n    this.pointClicked = pointClicked;\r\n    this.color = color;\r\n    this.board = board;\r\n  }\r\n\r\n  getPossibleCaptures(): Point[] {\r\n    return this.piece.getPossibleCaptures()\r\n      .filter(point => !MoveUtils.willMoveCauseCheck(this.color, this.pointClicked.row, this.pointClicked.col, point.row, point.col, this.board));\r\n  }\r\n\r\n  getPossibleMoves(): Point[] {\r\n    return this.piece.getPossibleMoves()\r\n      .filter(point => !MoveUtils.willMoveCauseCheck(this.color, this.pointClicked.row, this.pointClicked.col, point.row, point.col, this.board));\r\n  }\r\n}\r\n","import {BoardState} from './board-state';\r\n\r\nexport class BoardStateProvider {\r\n\r\n  moves: BoardState[];\r\n\r\n  constructor() {\r\n    this.moves = [];\r\n  }\r\n\r\n  addMove(moveHistory: BoardState) {\r\n    this.moves.push(moveHistory);\r\n  }\r\n\r\n  getMoves() {\r\n    return this.moves;\r\n  }\r\n\r\n  pop() {\r\n    return this.moves.pop();\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.moves.length === 0;\r\n  }\r\n\r\n  clear() {\r\n    this.moves = [];\r\n  }\r\n\r\n}\r\n","import {Piece} from '../models/pieces/piece';\r\nimport {Board} from '../models/board';\r\n\r\nexport class BoardState{\r\n\r\n  board: Board;\r\n\r\n  constructor(board: Board) {\r\n    this.board = board;\r\n  }\r\n\r\n}\r\n","export class HistoryMove {\r\n\r\n  move: string;\r\n  piece: string;\r\n  color: string;\r\n\r\n  constructor(move: string, piece: string, color: string) {\r\n    this.move = move;\r\n    this.piece = piece;\r\n    this.color = color;\r\n  }\r\n\r\n}\r\n","import {HistoryMove} from './history-move';\r\n\r\nexport class HistoryMoveProvider {\r\n\r\n  historyMoves: HistoryMove[];\r\n\r\n  constructor() {\r\n    this.historyMoves = [];\r\n  }\r\n\r\n  addMove(historyMove: HistoryMove) {\r\n    this.historyMoves.push(historyMove);\r\n  }\r\n\r\n  pop() {\r\n    return this.historyMoves.pop();\r\n  }\r\n\r\n  getAll() {\r\n    return this.historyMoves;\r\n  }\r\n\r\n  clear() {\r\n    this.historyMoves = [];\r\n  }\r\n\r\n}\r\n","export class Constants {\r\n static readonly DEFAULT_DARK_TILE_COLOR = 'rgb(97, 84, 61)';\r\n  static readonly DEFAULT_LIGHT_TILE_COLOR = '#BAA378';\r\n\r\n  static readonly DEFAULT_SIZE = 400;\r\n  static readonly MIN_BOARD_SIZE = 100;\r\n  static readonly MAX_BOARD_SIZE = 4000;\r\n\r\n}\r\n","export class CoordsProvider {\r\n\r\n  private _xCoords: string[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n  private _yCoords: number[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\n\r\n  reverse() {\r\n    this._xCoords = this._xCoords.reverse();\r\n    this._yCoords = this._yCoords.reverse();\r\n  }\r\n\r\n  get xCoords(): string[] {\r\n    return this._xCoords;\r\n  }\r\n\r\n  get yCoords(): number[] {\r\n    return this._yCoords;\r\n  }\r\n\r\n  reset() {\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this._xCoords = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n    this._yCoords = [8, 7, 6, 5, 4, 3, 2, 1];\r\n  }\r\n}\r\n","import {Pawn} from '../models/pieces/pawn';\r\nimport {Point} from '../models/pieces/point';\r\nimport {Color} from '../models/pieces/color';\r\nimport {UnicodeConstants} from '../utils/unicode-constants';\r\nimport {Rook} from '../models/pieces/rook';\r\nimport {Knight} from '../models/pieces/knight';\r\nimport {Bishop} from '../models/pieces/bishop';\r\nimport {Queen} from '../models/pieces/queen';\r\nimport {King} from '../models/pieces/king';\r\nimport {Board} from '../models/board';\r\n\r\nexport class BoardLoader {\r\n  private board: Board;\r\n\r\n\r\n  constructor(board: Board) {\r\n    this.board = board;\r\n  }\r\n\r\n  addPieces() {\r\n    this.board.pieces = [];\r\n    // piony czarne\r\n    for (let i = 0; i < 8; ++i) {\r\n      this.board.pieces.push(new Pawn(new Point(1, i), Color.BLACK, UnicodeConstants.BLACK_PAWN, this.board));\r\n    }\r\n    this.board.pieces.push(new Rook(new Point(0, 0), Color.BLACK, UnicodeConstants.BLACK_ROOK, this.board));\r\n    this.board.pieces.push(new Knight(new Point(0, 1), Color.BLACK, UnicodeConstants.BLACK_KNIGHT, this.board));\r\n    this.board.pieces.push(new Bishop(new Point(0, 2), Color.BLACK, UnicodeConstants.BLACK_BISHOP, this.board));\r\n    this.board.pieces.push(new Queen(new Point(0, 3), Color.BLACK, UnicodeConstants.BLACK_QUEEN, this.board));\r\n    this.board.pieces.push(new King(new Point(0, 4), Color.BLACK, UnicodeConstants.BLACK_KING, this.board));\r\n    this.board.pieces.push(new Bishop(new Point(0, 5), Color.BLACK, UnicodeConstants.BLACK_BISHOP, this.board));\r\n    this.board.pieces.push(new Knight(new Point(0, 6), Color.BLACK, UnicodeConstants.BLACK_KNIGHT, this.board));\r\n    this.board.pieces.push(new Rook(new Point(0, 7), Color.BLACK, UnicodeConstants.BLACK_ROOK, this.board));\r\n\r\n\r\n    // piony biale\r\n    for (let i = 0; i < 8; ++i) {\r\n      this.board.pieces.push(new Pawn(new Point(6, i), Color.WHITE, UnicodeConstants.WHITE_PAWN, this.board));\r\n    }\r\n    this.board.pieces.push(new Rook(new Point(7, 0), Color.WHITE, UnicodeConstants.WHITE_ROOK, this.board));\r\n    this.board.pieces.push(new Knight(new Point(7, 1), Color.WHITE, UnicodeConstants.WHITE_KNIGHT, this.board));\r\n    this.board.pieces.push(new Bishop(new Point(7, 2), Color.WHITE, UnicodeConstants.WHITE_BISHOP, this.board));\r\n    this.board.pieces.push(new Queen(new Point(7, 3), Color.WHITE, UnicodeConstants.WHITE_QUEEN, this.board));\r\n    this.board.pieces.push(new King(new Point(7, 4), Color.WHITE, UnicodeConstants.WHITE_KING, this.board));\r\n    this.board.pieces.push(new Bishop(new Point(7, 5), Color.WHITE, UnicodeConstants.WHITE_BISHOP, this.board));\r\n    this.board.pieces.push(new Knight(new Point(7, 6), Color.WHITE, UnicodeConstants.WHITE_KNIGHT, this.board));\r\n    this.board.pieces.push(new Rook(new Point(7, 7), Color.WHITE, UnicodeConstants.WHITE_ROOK, this.board));\r\n\r\n    this.board.calculateFEN();\r\n  }\r\n\r\n  loadFEN(fen: string) {\r\n    if (fen) {\r\n      this.board.reverted = false;\r\n      this.board.pieces = [];\r\n      let split = fen.split('/');\r\n      for (let i = 0; i < 8; ++i) {\r\n        let pointer = 0;\r\n        for (let j = 0; j < 8; ++j) {\r\n          let chunk = split[i].charAt(j);\r\n          if (chunk.match(/[0-9]/)) {\r\n            pointer += Number(chunk);\r\n          } else {\r\n            switch (chunk) {\r\n              case 'r':\r\n                this.board.pieces.push(new Rook(new Point(i, pointer), Color.BLACK, UnicodeConstants.BLACK_ROOK, this.board));\r\n                break;\r\n              case 'n':\r\n                this.board.pieces.push(new Knight(new Point(i, pointer), Color.BLACK, UnicodeConstants.BLACK_KNIGHT, this.board));\r\n\r\n                break;\r\n              case 'b':\r\n                this.board.pieces.push(new Bishop(new Point(i, pointer), Color.BLACK, UnicodeConstants.BLACK_BISHOP, this.board));\r\n                break;\r\n              case 'q':\r\n                this.board.pieces.push(new Queen(new Point(i, pointer), Color.BLACK, UnicodeConstants.BLACK_QUEEN, this.board));\r\n                break;\r\n              case 'k':\r\n                this.board.pieces.push(new King(new Point(i, pointer), Color.BLACK, UnicodeConstants.BLACK_KING, this.board));\r\n                break;\r\n              case 'p': {\r\n                let pawn = new Pawn(new Point(i, pointer), Color.BLACK, UnicodeConstants.BLACK_PAWN, this.board);\r\n                if ((pawn.color === Color.BLACK && pawn.point.row !== 1) || (pawn.color === Color.WHITE && pawn.point.row !== 6)) {\r\n                  pawn.isMovedAlready = true;\r\n                }\r\n                this.board.pieces.push(pawn);\r\n                break;\r\n              }\r\n              case 'R':\r\n                this.board.pieces.push(new Rook(new Point(i, pointer), Color.WHITE, UnicodeConstants.WHITE_ROOK, this.board));\r\n\r\n                break;\r\n              case 'N':\r\n                this.board.pieces.push(new Knight(new Point(i, pointer), Color.WHITE, UnicodeConstants.WHITE_KNIGHT, this.board));\r\n                break;\r\n\r\n              case 'B':\r\n                this.board.pieces.push(new Bishop(new Point(i, pointer), Color.WHITE, UnicodeConstants.WHITE_BISHOP, this.board));\r\n                break;\r\n\r\n              case 'Q':\r\n                this.board.pieces.push(new Queen(new Point(i, pointer), Color.WHITE, UnicodeConstants.WHITE_QUEEN, this.board));\r\n                break;\r\n\r\n              case 'K':\r\n                this.board.pieces.push(new King(new Point(i, pointer), Color.WHITE, UnicodeConstants.WHITE_KING, this.board));\r\n                break;\r\n\r\n              case 'P': {\r\n                let pawn = new Pawn(new Point(i, pointer), Color.WHITE, UnicodeConstants.WHITE_PAWN, this.board);\r\n                if ((pawn.color === Color.BLACK && pawn.point.row !== 1) || (pawn.color === Color.WHITE && pawn.point.row !== 6)) {\r\n                  pawn.isMovedAlready = true;\r\n                }\r\n                this.board.pieces.push(pawn);\r\n                break;\r\n              }\r\n            }\r\n            ++pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setCurrentPlayer(fen);\r\n      this.setCastles(fen);\r\n      this.setEnPassant(fen);\r\n      this.setFullMoveCount(fen);\r\n    } else {\r\n      throw Error('Incorrect FEN provided');\r\n    }\r\n  }\r\n\r\n\r\n  private setCurrentPlayer(fen: string) {\r\n    if (fen) {\r\n      let split = fen.split(' ');\r\n      this.board.currentWhitePlayer = split[1] === 'w';\r\n    }\r\n  }\r\n\r\n  setBoard(board: Board) {\r\n    this.board = board;\r\n  }\r\n\r\n  private setCastles(fen: string) {\r\n    if (fen) {\r\n      let split = fen.split(' ');\r\n      let castleChunk = split[2];\r\n\r\n      if (!castleChunk.includes('K')) {\r\n        this.setRookAlreadyMoved(Color.WHITE, 7);\r\n      }\r\n\r\n      if (!castleChunk.includes('Q')) {\r\n        this.setRookAlreadyMoved(Color.WHITE, 0);\r\n      }\r\n\r\n      if (!castleChunk.includes('k')) {\r\n        this.setRookAlreadyMoved(Color.BLACK, 7);\r\n      }\r\n\r\n      if (!castleChunk.includes('q')) {\r\n        this.setRookAlreadyMoved(Color.BLACK, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setFullMoveCount(fen: string) {\r\n\r\n  }\r\n\r\n  private setEnPassant(fen: string) {\r\n    if (fen) {\r\n      let split = fen.split(' ');\r\n      let enPassantPoint = split[3];\r\n\r\n      if (enPassantPoint === '-') {\r\n        return;\r\n      }\r\n\r\n      // if()\r\n    }\r\n  }\r\n\r\n  private setRookAlreadyMoved(color: Color, col: number) {\r\n    let rook = <Rook> this.board.pieces.find(e => e.color === color && e instanceof Rook && e.point.col === col);\r\n    rook.isMovedAlready = true;\r\n  }\r\n}\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {Piece} from '../models/pieces/piece';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-piece-promotion-modal',\r\n  templateUrl: './piece-promotion-modal.component.html',\r\n  styleUrls: ['./piece-promotion-modal.component.scss']\r\n})\r\nexport class PiecePromotionModalComponent {\r\n\r\n  @ViewChild('myModal', {static: false}) modal: ElementRef;\r\n\r\n  selectedIndex: number = 1;\r\n  private onCloseCallback: (index: number) => void;\r\n\r\n  open(closeCallback: (index: number) => void) {\r\n    this.onCloseCallback = closeCallback;\r\n    this.modal.nativeElement.style.display = 'block';\r\n  }\r\n\r\n  async close() {\r\n    this.onCloseCallback(this.selectedIndex);\r\n    this.modal.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  changeSelection(index: number){\r\n    this.selectedIndex = index;\r\n  }\r\n\r\n}\r\n","import {DrawPoint} from './draw-point';\r\n\r\nexport class Arrow {\r\n\r\n  start: DrawPoint;\r\n  end: DrawPoint;\r\n\r\n  isEqual(arrow: Arrow) {\r\n    return arrow && this.start.isEqual(arrow.start) && this.end.isEqual(arrow.end);\r\n  }\r\n\r\n}\r\n","export class DrawPoint {\r\n\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  isEqual(that: DrawPoint) {\r\n    return that && that.x === this.x && this.y === that.y;\r\n  }\r\n\r\n}\r\n","import {DrawPoint} from './draw-point';\r\n\r\nexport class Circle {\r\n\r\n  drawPoint: DrawPoint;\r\n\r\n  isEqual(circle: Circle) {\r\n    return circle && this.drawPoint.isEqual(circle.drawPoint);\r\n  }\r\n\r\n}\r\n","import {Circle} from './circle';\r\nimport {Arrow} from './arrow';\r\n\r\nexport class DrawProvider {\r\n\r\n  private _circles: Circle[];\r\n  private _arrows: Arrow[];\r\n\r\n\r\n  constructor() {\r\n    this._arrows = [];\r\n    this._circles = [];\r\n  }\r\n\r\n  addCircle(circle: Circle) {\r\n    this.circles.push(circle);\r\n  }\r\n\r\n  addArrow(arrow: Arrow) {\r\n    this.arrows.push(arrow);\r\n  }\r\n\r\n  get circles(): Circle[] {\r\n    return this._circles;\r\n  }\r\n\r\n  get arrows(): Arrow[] {\r\n    return this._arrows;\r\n  }\r\n\r\n  containsCircle(circle: Circle) {\r\n    return this.circles.some(e => e.isEqual(circle));\r\n  }\r\n\r\n  containsArrow(arrow: Arrow) {\r\n    return this.arrows.some(e => e.isEqual(arrow));\r\n  }\r\n\r\n  clear() {\r\n    this._arrows = [];\r\n    this._circles = [];\r\n  }\r\n\r\n}\r\n","import {Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {Piece} from './models/pieces/piece';\r\nimport {Color} from './models/pieces/color';\r\nimport {King} from './models/pieces/king';\r\nimport {UnicodeConstants} from './utils/unicode-constants';\r\nimport {Point} from './models/pieces/point';\r\nimport {Rook} from './models/pieces/rook';\r\nimport {Queen} from './models/pieces/queen';\r\nimport {Pawn} from './models/pieces/pawn';\r\nimport {Board} from './models/board';\r\nimport {MoveUtils} from './utils/move-utils';\r\nimport {NgxChessBoardService} from './service/ngx-chess-board.service';\r\nimport {NgxChessBoardView} from './ngx-chess-board-view';\r\nimport {AvailableMoveDecorator} from './piece-decorator/available-move-decorator';\r\nimport {BoardStateProvider} from './board-state-provider/board-state-provider';\r\nimport {BoardState} from './board-state-provider/board-state';\r\nimport {HistoryMove} from './history-move-provider/history-move';\r\nimport {HistoryMoveProvider} from './history-move-provider/history-move-provider';\r\nimport {Constants} from './utils/constants';\r\nimport {CoordsProvider} from './coords/coords-provider';\r\nimport {BoardLoader} from './board-state-provider/board-loader';\r\nimport {CdkDragEnd, CdkDragStart} from '@angular/cdk/drag-drop';\r\nimport {PiecePromotionModalComponent} from './piece-promotion-modal/piece-promotion-modal.component';\r\nimport {Bishop} from './models/pieces/bishop';\r\nimport {Knight} from './models/pieces/knight';\r\nimport {Arrow} from './drawing-tools/arrow';\r\nimport {DrawPoint} from './drawing-tools/draw-point';\r\nimport {Circle} from './drawing-tools/circle';\r\nimport {DrawProvider} from './drawing-tools/draw-provider';\r\n\r\n@Component({\r\n  selector: 'ngx-chess-board',\r\n  templateUrl: './ngx-chess-board.component.html',\r\n  styleUrls: ['./ngx-chess-board.component.scss']\r\n})\r\nexport class NgxChessBoardComponent implements OnInit, NgxChessBoardView {\r\n\r\n  @Input('size')\r\n  public set size(size: number) {\r\n    if (size && size >= Constants.MIN_BOARD_SIZE && size <= Constants.MAX_BOARD_SIZE) {\r\n      this._size = size;\r\n    } else {\r\n      this._size = Constants.DEFAULT_SIZE;\r\n    }\r\n    this.drawProvider.clear();\r\n    this.calculatePieceSize();\r\n  }\r\n\r\n  @HostListener('contextmenu', ['$event'])\r\n  onRightClick(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  _size: number = Constants.DEFAULT_SIZE;\r\n\r\n  @Input('darkTileColor')\r\n  darkTileColor: string = Constants.DEFAULT_DARK_TILE_COLOR;\r\n\r\n  @Input('lightTileColor')\r\n  lightTileColor: string = Constants.DEFAULT_LIGHT_TILE_COLOR;\r\n\r\n  @Input('showCoords')\r\n  showCoords: boolean = true;\r\n\r\n  @Input('dragDisabled')\r\n  dragDisabled: boolean = false;\r\n\r\n  @Input('drawDisabled')\r\n  drawDisabled: boolean = false;\r\n\r\n  @Output()\r\n  onMove: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  pieceSize: number;\r\n  selected = false;\r\n\r\n  @ViewChild('boardRef', {static: false})\r\n  boardRef: ElementRef;\r\n\r\n  @ViewChild('modal', {static: false}) modal: PiecePromotionModalComponent;\r\n\r\n  board: Board;\r\n  boardStateProvider: BoardStateProvider;\r\n  moveHistoryProvider: HistoryMoveProvider;\r\n  boardLoader: BoardLoader;\r\n  coords: CoordsProvider = new CoordsProvider();\r\n  disabling = false;\r\n  drawProvider: DrawProvider;\r\n  drawPoint: DrawPoint;\r\n\r\n  constructor(private ngxChessBoardService: NgxChessBoardService) {\r\n    this.board = new Board();\r\n    this.boardLoader = new BoardLoader(this.board);\r\n    this.boardLoader.addPieces();\r\n    this.boardStateProvider = new BoardStateProvider();\r\n    this.moveHistoryProvider = new HistoryMoveProvider();\r\n    this.drawProvider = new DrawProvider();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngxChessBoardService.componentMethodCalled$.subscribe(() => {\r\n      this.board.reset();\r\n    });\r\n    this.calculatePieceSize();\r\n  }\r\n\r\n  async onMouseUp(event) {\r\n    if (event.which !== 1 && !this.drawDisabled) {\r\n      this.addDrawPoint(event.x, event.y);\r\n      return;\r\n    }\r\n\r\n    this.drawProvider.clear();\r\n\r\n    if (this.dragDisabled) {\r\n      return;\r\n    }\r\n    let pointClicked = this.getClickPoint(event);\r\n\r\n    if (this.board.activePiece && pointClicked.isEqual(this.board.activePiece.point) && this.disabling) {\r\n      this.disableSelection();\r\n      this.disabling = false;\r\n      return;\r\n    }\r\n    if (this.selected) {\r\n      this.handleClickEvent(pointClicked);\r\n      //   this.possibleMoves = activePiece.getPossibleMoves();\r\n    } else {\r\n      let pieceClicked = this.getPieceByPoint(pointClicked.row, pointClicked.col);\r\n      if (pieceClicked) {\r\n\r\n        if ((this.board.currentWhitePlayer && pieceClicked.color === Color.BLACK) || (!this.board.currentWhitePlayer && pieceClicked.color === Color.WHITE)) {\r\n          return;\r\n        }\r\n\r\n        this.prepareActivePiece(pieceClicked, pointClicked);\r\n      }\r\n    }\r\n  }\r\n\r\n  afterMoveActions() {\r\n    this.checkIfPawnFirstMove(this.board.activePiece);\r\n    this.checkIfRookMoved(this.board.activePiece);\r\n    this.checkIfKingMoved(this.board.activePiece);\r\n\r\n    this.board.blackKingChecked = this.board.isKingInCheck(Color.BLACK, this.board.pieces);\r\n    this.board.whiteKingChecked = this.board.isKingInCheck(Color.WHITE, this.board.pieces);\r\n\r\n    this.checkForPossibleMoves(Color.BLACK, 'Checkmate!');\r\n    this.checkForPossibleMoves(Color.WHITE, 'Checkmate!');\r\n\r\n    this.board.calculateFEN();\r\n    this.checkForPat(Color.BLACK);\r\n    this.checkForPat(Color.WHITE);\r\n    this.disabling = false;\r\n  }\r\n\r\n  disableSelection() {\r\n    this.selected = false;\r\n    this.board.possibleCaptures = [];\r\n    this.board.activePiece = null;\r\n    this.board.possibleMoves = [];\r\n  }\r\n\r\n  prepareActivePiece(pieceClicked: Piece, pointClicked: Point) {\r\n    this.board.activePiece = pieceClicked;\r\n    this.selected = true;\r\n    this.board.possibleCaptures = new AvailableMoveDecorator(pieceClicked, pointClicked, this.board.currentWhitePlayer ? Color.WHITE : Color.BLACK, this.board).getPossibleCaptures();\r\n    this.board.possibleMoves = new AvailableMoveDecorator(pieceClicked, pointClicked, this.board.currentWhitePlayer ? Color.WHITE : Color.BLACK, this.board).getPossibleMoves();\r\n  }\r\n\r\n  getPieceByPoint(row: number, col: number): Piece {\r\n    row = Math.floor(row);\r\n    col = Math.floor(col);\r\n    return this.board.pieces.find(e => e.point.col === col && e.point.row === row);\r\n  }\r\n\r\n  isKingChecked(piece: Piece) {\r\n    if (piece instanceof King) {\r\n      return piece.color === Color.WHITE ? this.board.whiteKingChecked : this.board.blackKingChecked;\r\n    }\r\n  }\r\n\r\n  getClickPoint(event) {\r\n    return new Point(\r\n      Math.floor((event.y - this.boardRef.nativeElement.getBoundingClientRect().top) / (this.boardRef.nativeElement.getBoundingClientRect().height / 8)),\r\n      Math.floor((event.x - this.boardRef.nativeElement.getBoundingClientRect().left) / (this.boardRef.nativeElement.getBoundingClientRect().width / 8)));\r\n  }\r\n\r\n  async movePiece(piece: Piece, newPoint: Point) {\r\n    this.moveHistoryProvider.addMove(new HistoryMove(MoveUtils.format(piece.point, newPoint, this.board.reverted), piece.constructor.name, piece.color === Color.WHITE ? 'white' : 'black'));\r\n    let destPiece = this.board.pieces.find(e => e.point.col === newPoint.col && e.point.row === newPoint.row);\r\n\r\n    if (destPiece && piece.color != destPiece.color) {\r\n      this.board.pieces = this.board.pieces.filter(e => e !== destPiece);\r\n    } else if (destPiece && piece.color === destPiece.color) {\r\n      return;\r\n    }\r\n    if (piece instanceof King) {\r\n      let squaresMoved = Math.abs(newPoint.col - piece.point.col);\r\n      if (squaresMoved > 1) {\r\n        if (newPoint.col < 3) {\r\n          let leftRook = this.board.getPieceByField(piece.point.row, 0);\r\n          leftRook.point.col = 3;\r\n        } else {\r\n          let rightRook = this.board.getPieceByField(piece.point.row, 7);\r\n          rightRook.point.col = 5;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (piece instanceof Pawn) {\r\n      this.checkIfPawnTakesEnPassant(newPoint);\r\n      this.checkIfPawnEnpassanted(piece, newPoint);\r\n    }\r\n\r\n    piece.point = newPoint;\r\n    this.increaseFullMoveCount();\r\n    this.board.currentWhitePlayer = !this.board.currentWhitePlayer;\r\n    return this.checkForPawnPromote(piece);\r\n  }\r\n\r\n  checkIfPawnFirstMove(piece: Piece) {\r\n    if (piece instanceof Pawn) {\r\n      (piece as Pawn).isMovedAlready = true;\r\n    }\r\n  }\r\n\r\n  private checkIfRookMoved(piece: Piece) {\r\n    if (piece instanceof Rook) {\r\n      piece.isMovedAlready = true;\r\n    }\r\n  }\r\n\r\n  private checkIfKingMoved(piece: Piece) {\r\n    if (piece instanceof King) {\r\n      piece.isMovedAlready = true;\r\n    }\r\n  }\r\n\r\n  async checkForPawnPromote(piece: Piece) {\r\n    if (!(piece instanceof Pawn)) {\r\n      return;\r\n    }\r\n\r\n    if (piece.point.row === 0 || piece.point.row === 7) {\r\n      this.board.pieces = this.board.pieces.filter(e => e !== piece);\r\n      this.openPromoteDialog(piece);\r\n    }\r\n  }\r\n\r\n  async openPromoteDialog(piece: Piece) {\r\n    this.modal.open((index) => {\r\n      let isWhite = piece.color === Color.WHITE;\r\n      switch (index) {\r\n        case 1:\r\n          this.board.pieces.push(new Queen(piece.point, piece.color, isWhite ? UnicodeConstants.WHITE_QUEEN : UnicodeConstants.BLACK_QUEEN, this.board));\r\n          break;\r\n        case 2:\r\n          this.board.pieces.push(new Rook(piece.point, piece.color, isWhite ? UnicodeConstants.WHITE_ROOK : UnicodeConstants.BLACK_ROOK, this.board));\r\n          break;\r\n        case 3:\r\n          this.board.pieces.push(new Bishop(piece.point, piece.color, isWhite ? UnicodeConstants.WHITE_BISHOP : UnicodeConstants.BLACK_BISHOP, this.board));\r\n          break;\r\n        case 4:\r\n          this.board.pieces.push(new Knight(piece.point, piece.color, isWhite ? UnicodeConstants.WHITE_KNIGHT : UnicodeConstants.BLACK_KNIGHT, this.board));\r\n          break;\r\n        default:\r\n          this.board.pieces.push(new Queen(piece.point, piece.color, isWhite ? UnicodeConstants.WHITE_QUEEN : UnicodeConstants.BLACK_QUEEN, this.board));\r\n          break;\r\n      }\r\n      this.afterMoveActions();\r\n    });\r\n  }\r\n\r\n  private checkForPossibleMoves(color: Color, text: string) {\r\n    if (!this.board.pieces.filter(e => e.color === color)\r\n      .some(e => e.getPossibleMoves().some(f => !MoveUtils.willMoveCauseCheck(color, e.point.row, e.point.col, f.row, f.col, this.board))\r\n        || e.getPossibleCaptures().some(f => !MoveUtils.willMoveCauseCheck(color, e.point.row, e.point.col, f.row, f.col, this.board)))) {\r\n      alert(text);\r\n    }\r\n  }\r\n\r\n  private checkForPat(color: Color) {\r\n    if (color === Color.WHITE && !this.board.whiteKingChecked) {\r\n      this.checkForPossibleMoves(color, 'Stalemate!');\r\n    } else if (color === Color.BLACK && !this.board.blackKingChecked) {\r\n      this.checkForPossibleMoves(color, 'Stalemate!');\r\n    }\r\n  }\r\n\r\n  private checkIfPawnEnpassanted(piece: Pawn, newPoint: Point) {\r\n    if (Math.abs(piece.point.row - newPoint.row) > 1) {\r\n      this.board.enPassantPiece = piece;\r\n      this.board.enPassantPoint = new Point((piece.point.row + newPoint.row) / 2, piece.point.col);\r\n    } else {\r\n      this.board.enPassantPoint = null;\r\n      this.board.enPassantPiece = null;\r\n    }\r\n  }\r\n\r\n  private checkIfPawnTakesEnPassant(newPoint: Point) {\r\n    if (newPoint.isEqual(this.board.enPassantPoint)) {\r\n      this.board.pieces = this.board.pieces\r\n        .filter(piece => piece !== this.board.enPassantPiece);\r\n      this.board.enPassantPoint = null;\r\n      this.board.enPassantPiece = null;\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.boardStateProvider.clear();\r\n    this.moveHistoryProvider.clear();\r\n    this.boardLoader.addPieces();\r\n    this.board.reset();\r\n    this.coords.reset();\r\n    this.drawProvider.clear();\r\n  }\r\n\r\n  reverse() {\r\n    this.selected = false;\r\n    this.board.reverse();\r\n    this.coords.reverse();\r\n  }\r\n\r\n  private saveClone() {\r\n    let clone = this.board.clone();\r\n\r\n    if (this.board.reverted) {\r\n      clone.reverse();\r\n    }\r\n    this.boardStateProvider.addMove(new BoardState(clone));\r\n  }\r\n\r\n  undo() {\r\n    if (!this.boardStateProvider.isEmpty()) {\r\n      let lastBoard = this.boardStateProvider.pop().board;\r\n      if (this.board.reverted) {\r\n        lastBoard.reverse();\r\n      }\r\n      this.board = lastBoard;\r\n      this.boardLoader.setBoard(this.board);\r\n      this.board.possibleCaptures = [];\r\n      this.board.possibleMoves = [];\r\n      this.moveHistoryProvider.pop();\r\n    }\r\n  }\r\n\r\n  getMoveHistory() {\r\n    return JSON.stringify(this.moveHistoryProvider.getAll());\r\n  }\r\n\r\n  private calculatePieceSize() {\r\n    this.pieceSize = this._size / 10;\r\n  }\r\n\r\n  setFEN(fen: string) {\r\n    try {\r\n      this.boardLoader.loadFEN(fen);\r\n    } catch (e) {\r\n      this.boardLoader.addPieces();\r\n    }\r\n  }\r\n\r\n  getFEN() {\r\n    return this.board.fen;\r\n  }\r\n\r\n  private increaseFullMoveCount() {\r\n    if (!this.board.currentWhitePlayer) {\r\n      ++this.board.fullMoveCount;\r\n    }\r\n  }\r\n\r\n  dragEnded(event: CdkDragEnd) {\r\n    event.source.reset();\r\n    event.source.element.nativeElement.style.zIndex = '0';\r\n    event.source.element.nativeElement.style.pointerEvents = 'auto';\r\n    event.source.element.nativeElement.style.touchAction = 'auto';\r\n  }\r\n\r\n  dragStart(event: CdkDragStart) {\r\n    let style = event.source.element.nativeElement.style;\r\n    style.position = 'relative';\r\n    style.zIndex = '1000';\r\n    style.touchAction = 'none';\r\n    style.pointerEvents = 'none';\r\n  }\r\n\r\n  private async handleClickEvent(pointClicked: Point) {\r\n    if (this.board.isPointInPossibleMoves(pointClicked) || this.board.isPointInPossibleCaptures(pointClicked)) {\r\n      this.saveClone();\r\n      this.board.lastMoveSrc = new Point(this.board.activePiece.point.row, this.board.activePiece.point.col);\r\n      this.board.lastMoveDest = pointClicked;\r\n      await this.movePiece(this.board.activePiece, pointClicked);\r\n      this.afterMoveActions();\r\n      this.onMove.emit();\r\n    }\r\n\r\n    this.disableSelection();\r\n    let pieceClicked = this.getPieceByPoint(pointClicked.row, pointClicked.col);\r\n    if (pieceClicked) {\r\n\r\n      if ((this.board.currentWhitePlayer && pieceClicked.color === Color.BLACK) || (!this.board.currentWhitePlayer && pieceClicked.color === Color.WHITE)) {\r\n        return;\r\n      }\r\n\r\n      this.prepareActivePiece(pieceClicked, pointClicked);\r\n    }\r\n  }\r\n\r\n  onMouseDown(event: any) {\r\n\r\n    if (event.which !== 1) {\r\n      this.drawPoint = this.getDrawingPoint(event.x, event.y);\r\n      return;\r\n    }\r\n    let pointClicked = this.getClickPoint(event);\r\n\r\n    this.drawProvider.clear();\r\n\r\n    if (this.board.activePiece && pointClicked.isEqual(this.board.activePiece.point)) {\r\n      this.disabling = true;\r\n      return;\r\n    }\r\n\r\n    if (this.selected) {\r\n      this.handleClickEvent(pointClicked);\r\n      //   this.possibleMoves = activePiece.getPossibleMoves();\r\n    } else {\r\n      let pieceClicked = this.getPieceByPoint(pointClicked.row, pointClicked.col);\r\n      if (pieceClicked) {\r\n\r\n        if ((this.board.currentWhitePlayer && pieceClicked.color === Color.BLACK) || (!this.board.currentWhitePlayer && pieceClicked.color === Color.WHITE)) {\r\n          return;\r\n        }\r\n\r\n        this.prepareActivePiece(pieceClicked, pointClicked);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDrawingPoint(x: number, y: number) {\r\n    let squareSize = this._size / 8;\r\n    let xx = Math.floor((x - this.boardRef.nativeElement.getBoundingClientRect().left) / squareSize);\r\n    let yy = Math.floor((y - this.boardRef.nativeElement.getBoundingClientRect().top) / squareSize);\r\n    return new DrawPoint(\r\n      Math.floor(xx * squareSize + squareSize / 2),\r\n      Math.floor(yy * squareSize + squareSize / 2),\r\n    );\r\n  }\r\n\r\n  private addDrawPoint(x: any, y: any) {\r\n    let upPoint = this.getDrawingPoint(x, y);\r\n    if (this.drawPoint.isEqual(upPoint)) {\r\n      let circle = new Circle();\r\n      circle.drawPoint = upPoint;\r\n      if (!this.drawProvider.containsCircle(circle)) {\r\n        this.drawProvider.addCircle(circle);\r\n      }\r\n    } else {\r\n      let arrow = new Arrow();\r\n      arrow.start = this.drawPoint;\r\n      arrow.end = upPoint;\r\n\r\n      if (!this.drawProvider.containsArrow(arrow)) {\r\n        this.drawProvider.addArrow(arrow);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxChessBoardComponent} from './ngx-chess-board.component';\r\nimport {NgxChessBoardService} from './service/ngx-chess-board.service';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport {PiecePromotionModalComponent} from './piece-promotion-modal/piece-promotion-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [NgxChessBoardComponent, PiecePromotionModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DragDropModule,\r\n  ],\r\n  exports: [NgxChessBoardComponent]\r\n})\r\nexport class NgxChessBoardModule {\r\n\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxChessBoardModule,\r\n      providers: [NgxChessBoardService]\r\n    };\r\n  }\r\n\r\n}\r\n","export interface NgxChessBoardView {\r\n  reset();\r\n\r\n  reverse();\r\n\r\n  undo();\r\n\r\n  getMoveHistory();\r\n\r\n  setFEN(fen: string);\r\n\r\n  getFEN();\r\n\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}